<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="ProductMapper">


	<resultMap id="productSelectMap" type="product">
		<result property="prodNo"		column="prod_no"			jdbcType="NUMERIC"/>
		<result property="prodName"		column="prod_name"			jdbcType="VARCHAR"/>
		<result property="prodDetail"	column="prod_detail"		jdbcType="VARCHAR"/>
		<result property="manuDate"		column="manufacture_day"	jdbcType="VARCHAR"/>
		<result property="price"		column="price"				jdbcType="NUMERIC"/>
		<result property="fileName"		column="image_file"			jdbcType="VARCHAR"/>
		<result property="regDate"		column="reg_date"			jdbcType="DATE"/>
		<result property="proTranCode"  column="tran_status_code"	jdbcType="CHAR"/>	
	</resultMap>

	<insert id="addProduct"		parameterType="product">
		INSERT
		INTO product 
		VALUES (seq_product_prod_no.nextval, #{prodName}, #{prodDetail:VARCHAR},
				 #{manuDate:VARCHAR}, #{price:VARCHAR}, #{fileName:VARCHAR}, sysdate)
	</insert>

	<select 	id="getProduct"	parameterType="_int"	resultMap="productSelectMap">
		SELECT
		prod_no , prod_name , prod_detail , manufacture_day ,  price ,  image_file , reg_date 		
		FROM product 
		WHERE prod_no = #{value}
	</select>
	
	<update	id="updateProduct"	parameterType="product" >
	   	UPDATE product
	   	<set>
	   		prod_name 			= #{prodName},
			prod_detail			= #{prodDetail},
			manufacture_day 	= #{manuDate},
			price				= #{price},
			image_file			= #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	</update>
	
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT prod_no, prod_name, price, reg_date, tran_status_code
	  	FROM (SELECT inner_table.prod_no, inner_table.prod_name, inner_table.price, inner_table.reg_date, inner_table.tran_status_code, ROWNUM AS row_seq
	  		  FROM(SELECT p.prod_no, p.prod_name, p.price, p.reg_date, t.tran_status_code 
				   FROM product p, transaction t
				   <where>
				 		p.prod_no = t.prod_no(+)
				   		<if test="searchCondition != null">
							<if test="searchCondition == 0 and searchKeyword !='' ">
								AND p.prod_no LIKE '%${searchKeyword}%'
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
								AND p.prod_name LIKE '%${searchKeyword}%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
								AND p.price LIKE '%${searchKeyword}%'
							</if>
						</if>
					</where>
					ORDER BY p.prod_no ) inner_table
			   WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->

	  <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(SELECT p.prod_no, p.prod_name, p.price, t.tran_status_code 
				   FROM product p, transaction t
				   <where>
				 		p.prod_no = t.prod_no(+)
				   		<if test="searchCondition != null">
							<if test="searchCondition == 0 and searchKeyword !='' ">
								AND p.prod_no LIKE '%${searchKeyword}%'
							</if>
							<if test="searchCondition == 1 and searchKeyword !='' ">
								AND p.prod_name LIKE '%${searchKeyword}%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
								AND p.price LIKE '%${searchKeyword}%'
							</if>
						</if>
					</where>
					ORDER BY p.prod_no ) countTable						
	  </select>


</mapper>